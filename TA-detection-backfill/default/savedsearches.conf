
[Rerun: Run the next rerun scheduled detection backfill]
action.detection_backfill_run_the_next_backfill = 1
alert.severity = 1
alert.suppress = 0
alert.track = 0
counttype = number of events
cron_schedule = */5 * * * *
description = This search is used to execute the next scheduled detection backfill setup in the backlog. The number of results of this search is indicating how many tasks must be processed each time the savedsearch is run.
dispatch.earliest_time = -1h
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
search = | makeresults count=2

[Healthcheck: Get executed jobs of monitored savedsearches and add them in the backlog]
action.detection_backfill_add_a_healthcheck_task_to_the_backlog = 1
alert.suppress = 0
alert.track = 0
counttype = number of events
cron_schedule = */5 * * * *
description = This alert is used to analyze and get all jobs that have been run by the savedsearches over the given period to initialize a healthcheck by adding them in the backlog
dispatch.earliest_time = -365min
dispatch.latest_time = -360min
enableSched = 1
quantity = 0
relation = greater than
search = (index=_audit sourcetype=audittrail `filter_audittrail_logs` action=search savedsearch_name!="" info!="granted" detection_backfill_enabled=1) OR (`get_detection_backfill_binds` latest=now)\
``` Filter out on jobs that aren't an healthcheck job```\
| rename jobs.healthcheck_sid as healthcheck_search_id \
| eval search_id = coalesce(healthcheck_search_id, search_id), search_id = if(match(search_id,"^'"),search_id,"'"+search_id+"'")\
| eventstats values(sourcetype) as sourcetype by search_id\
| where mvcount(sourcetype)==1 AND sourcetype="audittrail"\
| table exec_time, search_id, app, savedsearch_name, search_et, search_lt, scan_count, event_count, result_count

[Healthcheck: Run the next healthcheck jobs from the backlog]
action.detection_backfill_run_healthcheck_on_savedsearches = 1
alert.severity = 1
alert.suppress = 0
alert.track = 0
counttype = number of events
cron_schedule = 3,8,13,18,23,28,33,38,43,48,53,58 * * * *
description = This search is used to execute the next healtcheck jobs from the backlog. The number of results of this search is indicating how many tasks must be processed each time the savedsearch is run.
dispatch.earliest_time = -1h
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
search = | makeresults count=2

[Healthcheck: Get advanced executed and monitored savedsearches jobs (original and healthcheck)]
action.detection_backfill_index_results_from_sid = 1
alert.suppress = 0
alert.track = 0
counttype = number of events
cron_schedule = 3,8,13,18,23,28,33,38,43,48,53,58 * * * *
description = This alert is used to analyze and get all jobs (original and healtcheck jobs) of advanced monitored savedsearch to analyze the results content
dispatch.earliest_time = -6min@min
dispatch.latest_time = -1min@min
enableSched = 1
quantity = 0
relation = greater than
search = (index=_audit sourcetype=audittrail `filter_audittrail_logs` action=search savedsearch_name!="" info!="granted" detection_backfill_enabled=1 detection_backfill_advanced=1) OR (`get_detection_backfill_reports` earliest=-7d latest=now)\
| rename job.sid as report_search_id \
| eval search_id = coalesce(report_search_id, search_id), search_id = if(match(search_id,"^'"),search_id,"'"+search_id+"'")\
| eventstats values(sourcetype) as sourcetypes, values(healthcheck_uid) as healthcheck_uid by search_id\
| where mvcount(sourcetypes)==2 AND sourcetype="audittrail"\
| table search_id, healthcheck_uid

[Healthcheck: Get executed healthcheck jobs of monitored savedsearches and log their result]
action.detection_backfill_log_the_results_of_a_healthcheck_task = 1
alert.suppress = 0
alert.track = 0
counttype = number of events
cron_schedule = */5 * * * *
description = This alert is used to analyze and get all jobs that have been run by the healthcheck mechanism over the given period to get the outcome of this rerun
dispatch.earliest_time = -10min@min
dispatch.latest_time = -5min@min
enableSched = 1
quantity = 0
relation = greater than
search = (index=_audit sourcetype=audittrail `filter_audittrail_logs` action=search savedsearch_name!="" info!="granted" detection_backfill_enabled=1) OR (`get_detection_backfill_binds` latest=now)\
``` Filter out on jobs that aren't an healthcheck job```\
| rename jobs.healthcheck_sid as healthcheck_search_id \
| eval search_id = coalesce(healthcheck_search_id, search_id), search_id = if(match(search_id,"^'"),search_id,"'"+search_id+"'")\
| eventstats values(sourcetype) as sourcetypes, values(healthcheck_uid) as healthcheck_uid by search_id\
| where mvcount(sourcetypes)==2 AND sourcetype="audittrail"\
| table exec_time, healthcheck_uid, search_id, app, savedsearch_name, search_et, search_lt, scan_count, event_count, result_count